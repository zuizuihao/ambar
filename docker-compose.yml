version: "2.1"
networks:
  internal_network:
services:      
  db:
    restart: always
    networks:
      - internal_network
    build:
      context: ./MongoDB
      dockerfile: Dockerfile
    restart: always
    environment:
      - cacheSizeGB=2
    volumes:
      - ./ambar_data/db:/data/db
    expose:
      - "27017"
    ports:
      - "27017:27017"   

  es:
    restart: always
    networks:
      - internal_network
    build:
      context: ./ElasticSearch
      dockerfile: Dockerfile
    expose:
      - "9200" 
    ports:
      - "9200:9200"   
    environment:
      - cluster.name=ambar-es
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ulimits:
      memlock:
        soft: -1
        hard: -1  
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ./ambar_data/es:/usr/share/elasticsearch/data

  rabbit:
    restart: always
    networks:
      - internal_network
    build:
      context: ./Rabbit
      dockerfile: Dockerfile
    hostname: rabbit
    expose:
      - "15672"
      - "5672"   
    ports:
      - "5672:5672"  
    volumes:
      - ./ambar_data/rabbit:/var/lib/rabbitmq

  redis:
    restart: always
    sysctls:
      - net.core.somaxconn=1024
    networks:
      - internal_network
    build:
      context: ./Redis
      dockerfile: Dockerfile
    expose:
      - "6379" 
    ports:
      - "6379:6379"  
      
  serviceapi:
    depends_on:
      redis:
        condition: service_healthy
      rabbit:
        condition: service_healthy
      es:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: always
    networks:
      - internal_network
    build:
      context: ./ServiceApi
      dockerfile: Dockerfile
    expose:
      - "8081"  
    ports:
      - "8081:8081"  
    environment:            
      - mongoDbUrl=mongodb://host.docker.internal:27017/ambar_data
      - elasticSearchUrl=http://host.docker.internal:9200
      - redisHost=redis
      - redisPort=6379
      - rabbitHost=amqp://host.docker.internal:5672
      - langAnalyzer=ambar_cn  
      - SLAO_HOSTNAME=ambar 
      - SLAO_API_KEY=

  webapi:
    depends_on:
      serviceapi:
        condition: service_healthy
    restart: always
    networks:
      - internal_network
    build:
      context: ./WebApi
      dockerfile: Dockerfile
    expose:
      - "8080"
    ports:
      - "8080:8080"
    environment:            
      - uiLang=en
      - mongoDbUrl=mongodb://host.docker.internal:27017/ambar_data
      - elasticSearchUrl=http://host.docker.internal:9200
      - redisHost=redis
      - redisPort=6379
      - serviceApiUrl=host.docker.internal:8081
      - rabbitHost=amqp://host.docker.internal:5672  
      - SLAO_HOSTNAME=ambar
      - SLAO_API_KEY=  

  frontend:
    depends_on:
      webapi:
        condition: service_healthy
    build:
      context: ./FrontEnd
      dockerfile: Dockerfile
    restart: always
    networks:
      - internal_network
    ports:
      - "8085:80"
    expose:
      - "80"
    environment:
      - api=http://host.docker.internal:8080  

  pipeline0:
    depends_on: 
      serviceapi: 
        condition: service_healthy                            
    build:
      context: ./Pipeline
      dockerfile: Dockerfile
    restart: always
    networks:
      - internal_network  
    environment:                
      - id=0
      - api_url=http://host.docker.internal:8081
      - rabbit_host=amqp://host.docker.internal:5672
      - web_api_url=http://host.docker.internal:8080

  webcalc_crawler:
    depends_on: 
      serviceapi: 
        condition: service_healthy 
    build:
      context: ./LocalCrawler
      dockerfile: Dockerfile
    restart: always
    networks:
      - internal_network
    expose:
      - "8082"
    ports:
      - "8082:8082"  
    environment:      
      - name=webcalc_crawler
      - apiUrl=http://host.docker.internal:8080
      - mongoDbUrl=mongodb://host.docker.internal:27017/ambar_data
      - elasticSearchUrl=http://host.docker.internal:9200
      - redisHost=host.docker.internal:6379
      - rabbitHost=amqp://host.docker.internal:5672
    volumes:
      - ./ambar_data/raw:/usr/data